# DO NOT EDIT
# Generated by bin/generate_files
FROM <%= base_image %>

<%- if name == 'idf-rust' -%>
USER root
<%- end -%>
<%- if name == 'node' -%>
RUN deluser --remove-home node

<%- end -%>
RUN apt-get update && apt-get install -y sudo less wget curl git jq ripgrep

<%- if node_version -%>
RUN apt-get update && curl -fsSL https://deb.nodesource.com/setup_<%= node_version %>.x | bash - \
  && apt-get install -y nodejs

<%- end -%>
<%- if name == 'cypress' -%>
RUN apt-get update \
  && apt-get install -y \
    # https://docs.cypress.io/guides/getting-started/installing-cypress#System-requirements \
    libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb \
    # novnc \
    python3 python3-setuptools x11vnc

ENV NOVNC_VERSION 784103761829b7c14579b7e26a18193310a194f4
RUN mkdir /novnc \
  && wget -O - https://github.com/novnc/noVNC/archive/${NOVNC_VERSION}.tar.gz | tar -xzv -C /novnc/ \
  && mv /novnc/noVNC-${NOVNC_VERSION} /novnc/novnc \
  && ln -s /novnc/novnc/vnc.html /novnc/novnc/index.html \
  && chgrp -R 0 /novnc \
  && chmod -R g=u /novnc

ENV WEBSOCKIFY_VERSION 0.10.0
RUN wget -O - https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzv -C /novnc/ \
  && cd /novnc/websockify-${WEBSOCKIFY_VERSION} \
  && python3 setup.py install \
  && rm -rf /novnc/websockify-${WEBSOCKIFY_VERSION}

ENV DISPLAY :0
<%- end -%>
<%- if name == 'qmk' -%>
RUN apt-get update && apt-get install -y python3-pip && python3 -m pip install qmk && qmk setup -H /home/user/qmk_firmware -y
<%- end -%>
ENV KUBECTL_VERSION v1.24.2
RUN wget https://dl.k8s.io/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl -O /usr/bin/kubectl && chmod +x /usr/bin/kubectl

<%- if tag == 'docker' -%>
ENV DOCKER_CLI_VERSION 20.10.8
RUN wget -O- https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_CLI_VERSION.tgz | tar xzv -C /tmp \
  && mv /tmp/docker/docker /usr/bin/docker \
  && rm -rf /tmp/docker

<%- end -%>
RUN echo "ALL ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

COPY --chown=0:0 entrypoint.sh /
RUN mkdir -p /home/user && \
  chgrp -R 0 /home /etc/passwd /etc/group /etc/shadow && \
  chmod -R g=u /home /etc/passwd /etc/group /etc/shadow && \
  chmod +x /entrypoint.sh

<%- if name == 'idf-rust' -%>
RUN apt-get update && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install pkg-config libssl-dev libudev-dev -y
RUN chmod -R ugo+rw /opt

<%- end -%>
ENV HOME /home/user
ENV LANG C.UTF-8
WORKDIR /projects

ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash", "-c", "trap : TERM INT; sleep infinity & wait"]
